@model User
@{
    ViewBag.Title = "Register";
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Registration</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <style>
        .bg-blue {
            height: 125vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #6faeff;
        }

        .container-taps {
            width: 400px;
        }

        .taps-container {
            background-color: #fff;
            padding: 30px;
        }

        .tap_bar {
            display: flex;
            justify-content: end;
        }

            .tap_bar button {
                background-color: #fff;
                border: none;
                width: 100px;
                padding: 10px;
                background-color: #91c1ff;
                color: #009dc0;
                font-weight: bold;
            }

            .tap_bar .activeTap {
                background-color: #fff;
            }

        .btn-sub {
            text-align: center;
            background-color: #3687d8;
            color: #fff;
            font-weight: bold;
        }

        .validation-error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="bg-blue">
        <div class="container-taps">
            <header>
                <div class="tap_bar">
                    <button class="" onclick="location.href='@Url.Action("Login", "Account")'">login</button>
                    <button class="activeTap" id="register">Register</button>
                </div>
            </header>
            <div class="taps-container">
                <div class="tap" id="tap-register">
                    <h3>Register</h3>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                    {
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                            <span class="validation-error">@Html.ValidationMessageFor(model => model.Name)</span>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            <span class="validation-error">@Html.ValidationMessageFor(model => model.Email)</span>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            <span class="validation-error">@Html.ValidationMessageFor(model => model.Password)</span>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            <span class="validation-error">@Html.ValidationMessageFor(model => model.ConfirmPassword)</span>
                        </div>
                        <div class="mb-3">
                            <label for="birthDate" class="form-label">Birth Date</label>
                            <div class="d-flex gap-3 w-100">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.BirthYear, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model.BirthYear, new { @class = "form-control", placeholder = "Year" })
                                    <span class="validation-error">@Html.ValidationMessageFor(model => model.BirthYear)</span>
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.BirthMonth, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model.BirthMonth, new { @class = "form-control", placeholder = "Month" })
                                    <span class="validation-error">@Html.ValidationMessageFor(model => model.BirthMonth)</span>
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.BirthDay, new { @class = "form-label" })
                                    @Html.TextBoxFor(model => model.BirthDay, new { @class = "form-control", placeholder = "Day" })
                                    <span class="validation-error">@Html.ValidationMessageFor(model => model.BirthDay)</span>
                                </div>

                            </div>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-sub">Register</button>
                        </div>
                        if (!string.IsNullOrEmpty(ViewBag.RegisterSuccessMessage))
                        {
                            <div class="alert alert-success" role="alert">
                                @ViewBag.RegisterSuccessMessage
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</body>
</html>
